{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends base_template %}

{% block title %}
    {% if admin.id(object) is not null %}
        {{ "title_edit"|trans({'%name%': admin.toString(object) }, 'SonataAdminBundle') }}
    {% else %}
        {{ "title_create"|trans({}, 'SonataAdminBundle') }}
    {% endif %}
{% endblock%}

{% block side_menu %}{{ knp_menu_render(admin.sidemenu(action), {'currentClass' : 'active'}, 'list') }}{% endblock %}

{% block actions %}
    <div class="sonata-actions btn-group">
        {% if object.slug %}
            <a class="btn sonata-action-element" href="{{ path('wbb_bar_bestof_global',{bestOfSlug:object.slug}) }}" target="_blank">
                <i class="icon-zoom-in"></i>
                {{ 'link_action_show'|trans({}, 'SonataAdminBundle') }}
            </a>
        {% endif %}
        {% include 'SonataAdminBundle:Button:history_button.html.twig' %}
        {% include 'SonataAdminBundle:Button:acl_button.html.twig' %}
        {% include 'SonataAdminBundle:Button:create_button.html.twig' %}
        {% include 'SonataAdminBundle:Button:list_button.html.twig' %}
    </div>
{% endblock %}

{% use 'WBBBarBundle:Admin:BestOf/base_edit_form.html.twig' with form as parentForm %}


{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', {"callback": "fos.Router.setData"}) }}"></script>
    <script type="text/javascript">
        $(document).ready(function(){
            var country = $("#{{ admin.uniqId }}_country");
            country.change(updateCities());
            country.change();

            function updateCities(){
                return function () {
                    var countryId = $("#{{ admin.uniqId }}_country option:selected").val();
                    var city = $("#{{ admin.uniqId }}_city");

                    city.empty();
                    city.trigger("list:updated");

                    var url = Routing.generate('get_cities_from_country', {'bestof': '{% if admin.id(object) %}{{ admin.id(object) }}{% else %}0{% endif %}', 'countryId': countryId });
                    $.post(url, { countryId: countryId }, function(data){
                        var options = JSON && JSON.parse(data) || $.parseJSON(data);
                        city.empty().append(options);
                        city.trigger("list:updated");
                    },"text");

                    city.val("option:first").attr("selected", true);
                };
            }

            $('select').each(function(){
                var bar = $(this).attr('id');
                var type = bar.substr(bar.length - 4);
                if (type != "_bar"){
                    return;
                }
                var media = $('#'+bar.substr(0,(bar.length-3))+'media');
                barId = $(this).val();
                mediaId = media.val() || 0;

                media.empty();
                media.trigger("list:updated");

                var url = Routing.generate('get_medias_from_bar', {'barID': barId, 'mediaID': mediaId });
                $.post(url, { 'barID': barId, 'mediaID': mediaId }, function(data){
                    var options = JSON && JSON.parse(data) || $.parseJSON(data);
                    media.empty().append(options);
                    media.trigger("list:updated");
                },"text");
            });

            $('select').live('change', function(){
                var bar = $(this).attr('id');
                var type = bar.substr(bar.length - 4);
                if (type != "_bar"){
                    return;
                }
                var media = $('#'+bar.substr(0,(bar.length-3))+'media');
                barId = $(this).val();
                mediaId = media.val() || 0;

                media.empty();
                media.trigger("list:updated");

                var url = Routing.generate('get_medias_from_bar', {'barID': barId, 'mediaID': mediaId });
                $.post(url, { 'barID': barId, 'mediaID': mediaId }, function(data){
                    var options = JSON && JSON.parse(data) || $.parseJSON(data);
                    media.empty().append(options);
                    media.trigger("list:updated");
                    media.select2("val", "");
                },"text");
            });

            jQuery(document).on('sonata.add_element',function(){
                $('select').each(function(){
                    var bar = $(this).attr('id');
                    var type = bar.substr(bar.length - 4);
                    if (type != "_bar"){
                        return;
                    }
                    var media = $('#'+bar.substr(0,(bar.length-3))+'media');
                    barId = $(this).val();
                    mediaId = media.val() || 0;

                    media.empty();
                    media.trigger("list:updated");

                    var url = Routing.generate('get_medias_from_bar', {'barID': barId, 'mediaID': mediaId });
                    $.post(url, { 'barID': barId, 'mediaID': mediaId }, function(data){
                        var options = JSON && JSON.parse(data) || $.parseJSON(data);
                        media.empty().append(options);
                        media.trigger("list:updated");
                    },"text");
                });
            });

            //Bar tags relations
            $('select').each(function(){
                var type = $(this).attr('id');
                var extension = type.substr(type.length - 5);
                if (extension != "_type"){
                    return;
                }
                var tag = $('#'+type.substr(0,(type.length-4))+'tag');
                typeId = $(this).val();
                tagId = tag.val() || 0;

                tag.empty();
                tag.trigger("list:updated");

                var url = Routing.generate('get_tags_by_type', {'typeID': typeId, 'tagID': tagId });
                $.post(url, { 'typeID': typeId, 'tagID': tagId }, function(data){
                    var options = JSON && JSON.parse(data) || $.parseJSON(data);
                    tag.empty().append(options);
                    tag.trigger("list:updated");
                },"text");
            });

            $('select').live('change', function(){
                var type = $(this).attr('id');
                var extension = type.substr(type.length - 5);
                if (extension != "_type"){
                    return;
                }
                var tag = $('#'+type.substr(0,(type.length-4))+'tag');
                typeId = $(this).val();
                tagId = tag.val() || 0;

                tag.empty();
                tag.trigger("list:updated");

                var url = Routing.generate('get_tags_by_type', {'typeID': typeId, 'tagID': tagId });
                $.post(url, { 'typeID': typeId, 'tagID': tagId }, function(data){
                    var options = JSON && JSON.parse(data) || $.parseJSON(data);
                    tag.empty().append(options);
                    tag.trigger("list:updated");
                    tag.select2("val", "");
                },"text");
            });

            jQuery(document).on('sonata.add_element',function(){
                $('select').each(function(){
                    var type = $(this).attr('id');
                    var extension = type.substr(type.length - 5);
                    if (extension != "_type"){
                        return;
                    }
                    var tag = $('#'+type.substr(0,(type.length-4))+'tag');
                    typeId = $(this).val();
                    tagId = tag.val() || 0;

                    tag.empty();
                    tag.trigger("list:updated");

                    var url = Routing.generate('get_tags_by_type', {'typeID': typeId, 'tagID': tagId });
                    $.post(url, { 'typeID': typeId, 'tagID': tagId }, function(data){
                        var options = JSON && JSON.parse(data) || $.parseJSON(data);
                        tag.empty().append(options);
                        tag.trigger("list:updated");
                    },"text");
                });
            });
        });
    </script>
{% endblock %}

{% block form %}
    {{ block('parentForm') }}
{% endblock %}
