<?php

namespace WBB\BarBundle\Repository;

use WBB\CoreBundle\Repository\EntityRepository;
use WBB\BarBundle\Entity\Bar;

/**
 * BarRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BarRepository extends EntityRepository
{
    const BAR_LOCATION_CITY = 1;
    const BAR_LOCATION_COUNTRY = 2;
    const BAR_LOCATION_WORLDWIDE = 3;


    public function findYouMayAlsoLike(Bar $bar, $location = BarRepository::BAR_LOCATION_CITY, $limit = 4, $exceptBars = array(0))
    {
        $ids = array(0);
        foreach($exceptBars as $exBar)
        {
            if($exBar)
                $ids[] = $exBar->getId();
        }
        
        $qb = $this->createQuerybuilder($this->getAlias());

        $qb
            ->select($this->getAlias())
            ->innerjoin($this->getAlias().'.city', 'c')
            ->innerjoin($this->getAlias().'.tags', 'bt')
            ->innerjoin('bt.tag', 't')
            ->where($qb->expr()->eq($this->getAlias().'.onTop', $qb->expr()->literal(true)))
            ->andWhere($qb->expr()->in('t.id',':tags'))
            ->andWhere($qb->expr()->neq($this->getAlias().'.id', $bar->getId()))
            ->andWhere($qb->expr()->notIn('t.id',':exceptBars'))
            ->setParameter('tags', $bar->getTagsIds())
            ->setParameter('exceptBars', $ids)
            ->setMaxResults($limit)
        ;

        if($location == BarRepository::BAR_LOCATION_CITY and !is_null($bar->getCity()))
        {
            $qb
                ->andWhere($qb->expr()->eq($this->getAlias().'.city', ':city'))
                ->setParameter('city', $bar->getCity());
        }

        if($location == BarRepository::BAR_LOCATION_COUNTRY and !is_null($bar->getCity()) and !is_null($bar->getCity()->getCountry()))
        {
            $qb
                ->andWhere($qb->expr()->eq('c.country', ':country'))
                ->setParameter('country', $bar->getCity()->getCountry());
        }

        return $qb->getQuery()->getResult();
    }
} 