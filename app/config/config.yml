imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true, enabled: true, api: 2.4 }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
#    session:
#        handler_id: session.handler.pdo
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'StnwDatePickerBundle:Form:fields.html.twig'
    globals:
        feedsLimit: %feeds_limit%
        websiteUrl: %website_url%

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                dql:
                    numeric_functions:
                        geo: WBB\CoreBundle\AST\Functions\Geo
                mappings:
                    SonataMediaBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    encryption: "%mailer_encryption%"
    #spool:     { type: memory }

# FOS UserBundle config
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: WBB\UserBundle\Entity\User
    registration:
        confirmation: { enabled: true, template: WBBUserBundle:User:confirmation.email.html.twig }
        form:
            type: wbb_user_registration
    profile:
        form:
            type: wbb_user_profile

    from_email:
        address:        myportal@pernod-ricard.com
        sender_name:    WBB
    resetting:
        email:
            template: WBBUserBundle:User:resetting.email.html.twig
            
    service:
        mailer: fos_user.mailer.twig_swift

# Sonata Admin bundle
sonata_admin:
    title:      "WBB - Administration"
    security:
            handler: sonata.admin.security.handler.role
    #title_logo: /bundles/wwbcore/images/common/logo.png
    dashboard:
        blocks:
            # display a dashboard block
            -
                position: left
                type: sonata.block.service.text
                settings:
                    content: >
                        <h2>Bienvenue sur votre espace d'administration WBB</h2>
                        <p>Cette interface vous permet de mettre à jour le contenu du site WBB. <br />
                        Vous aurez la possibilité de gérer les utilisateurs,
                        les informations relatives aux bars, tips, et villes. </p><br /><br />
            - { position: left, type: sonata.admin.block.admin_list }
            - { position: right, type: wbb.block.service.semsoft.import }

        groups:
            wbb_location: ~
            wbb_bar: ~
            wbb_user: ~
    templates:
        dashboard: SonataAdminBundle:Core:dashboard.html.twig
        layout: SonataAdminBundle::layout.html.twig
        short_object_description: WBBBarBundle:Admin:Helper/short-object-description.html.twig

sonata_doctrine_orm_admin:
    templates:
        types:
            list:
                status: SonataAdminBundle:CRUD/Type/List:status.html.twig

# Sonata Blocks
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
        sonata.admin.block.search_result:
            contexts:   [admin]
        sonata.block.service.text:
        wbb.block.service.semsoft.import: ~
        sonata.block.service.rss:

#Sonata Media Bundle
sonata_media:
    default_context: default
    db_driver: doctrine_orm
    contexts:
        default:
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
            providers:
                - sonata.media.provider.youtube
                - sonata.media.provider.image
            formats:
                small:          { width: 100 , quality: 100}
                big:            { width: 500 , quality: 100}
                large:          { width: 1024, quality: 100}
                slider_small :  { width: 320 , height: 240, quality: 100 }
                slider_large :  { width: 640 , height: 480, quality: 100 }
                news :          { width: 600 , height: 400, quality: 100 }
                news_large :    { width: 900 , height: 600, quality: 100 }

        simple_image:
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                small:          { width: 100 , quality: 100}
                big:            { width: 500 , quality: 100}
                large:          { width: 1024, quality: 100}
                slider_small :  { width: 320 , height: 240, quality: 100 }
                slider_large :  { width: 640 , height: 480, quality: 100 }
                news :          { width: 600 , height: 400, quality: 100 }
                news_large :    { width: 900 , height: 600, quality: 100 }
                city_small :    { width: 340 , height: 350, quality: 100 }
                city_square :   { width: 170 , height: 175, quality: 100 }
                bestof_small :  { width: 387 , height: 290, quality: 100 }

        banner:
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 100 , quality: 100}
                300x250 : { width: 300 , height: 250, quality: 100 }
                300x600 : { width: 300 , height: 600, quality: 100 }
                728x90 : { width: 728 , height: 90, quality: 100 }

        sponsor:
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                small:          { width: 82 , quality: 82}
                news :          { width: 600 , height: 400, quality: 100 }
                news_large :    { width: 900 , height: 600, quality: 100 }
                slider_large :  { width: 640 , height: 480, quality: 100 }
                sponsor_detail :  { width: 372 , height: 170, quality: 100 }

        sponsor_small:
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                small:          { width: 82 , quality: 82}
                news :          { width: 600 , height: 400, quality: 100 }
                news_large :    { width: 900 , height: 600, quality: 100 }
                slider_large :  { width: 640 , height: 480, quality: 100 }
                sponsor_detail :  { width: 372 , height: 170, quality: 100 }

        avatar:
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                small:   { width: 82, height: 82, quality: 100}
                medium:  { width: 82, height: 82, quality: 100}
                large:   { width: 145, height: 145, quality: 100}

    cdn:
        server:
            path: /uploads/media
#            path: http://wbb-bucket.s3-website-us-east-1.amazonaws.com #http://staging.worldsbestbars.com.s3-website-eu-west-1.amazonaws.com

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     true
#        s3:
#            bucket: wbb-bucket
#            accessKey: AKIAJ6WSWPZUXSICYDPQ #AKIAJM6ZSVZZ3WLRHZIA
#            secretKey: 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 #Sw9IbIoSTjfQIamFAFWqljY/tNhQmDBnChYzSC9T
#            create: true
#            region:         s3-website-us-east-1.amazonaws.com #s3-website-eu-west-1.amazonaws.com # change if not using US Standard region
#            storage: standard # can be one of: standard or reduced
#            acl: public # can be one of: public, private, open, auth_read, owner_read, owner_full_control
#            encryption:     aes256 # can be aes256 or not set
#            cache_control:  max-age=86400 # or any other
#            meta:
#                key1:       value1 #any amount of metas(s ent as x-amz-meta-key1 = value1)

    providers:
        image:
#            filesystem: sonata.media.filesystem.s3
            resizer: sonata.media.resizer.custom #sonata.media.resizer.custom
            cdn: sonata.media.cdn.server

#Fake Data Generator
hautelook_alice:
    locale: fr_FR
    seed: 1

#Foursquare API Configuration
jcroll_foursquare_api:
    client_id:     %foursquare_client_id%
    client_secret: %foursquare_client_secret%

sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig #keep this commented unless you are using media bundle.
        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig
        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig
        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig
        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

mobile_detect:
    redirect:
        mobile: {is_enabled: false}
        tablet: {is_enabled: false}
    switch_device_view:
        save_referer_path: true
    extension_class: WBB\CoreBundle\Twig\Extension\MobileDetectExtension

#CreatedAt et UpdatedAt Extention
stof_doctrine_extensions:
   orm:
       default:
           timestampable: true
           sluggable:  true

fos_facebook:
    alias:  facebook
    app_id: %facebook_app_id%
    secret: %facebook_app_secret%
    cookie: true
    permissions: [email, user_birthday, user_location]

hpatoio_bitly:
    access_token: %bitly_access_token%

aequasi_cache:
    instances:
        default:
          persistent: true # Boolean or persistent_id
          namespace: mc
          type: memcached
          hosts:
              - { host: localhost, port: 11211 }

    session:
        enabled: true
        instance: default
        prefix: "session_"
        ttl: 7200

    doctrine:
        enabled: true
        metadata:
            instance: default
            entity_managers:   [ default ]
            document_managers: [ default ]
        result:
            instance: default
            entity_managers:   [ default ]
        query:
            instance: default
            entity_managers: [ default ]
